{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\opt.admin\\\\Documents\\\\ChatApp\\\\frontend\\\\src\\\\components\\\\ChatBoxComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { useSelector } from \"react-redux\";\nimport { BsFillPencilFill, BsFillReplyFill, BsFillArchiveFill } from \"react-icons/bs\";\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket('ws://localhost:5000');\n\nfunction ChatBoxComponent() {\n  _s();\n\n  const loginInfo = useSelector(state => state.loginInfo);\n  /* --------------- CHAT VAR & FUNCTIONS ------------ */\n\n  const [typingEvt, setTypingEvt] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n  const [editMsgId, setEditMsgId] = useState(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTypingEvt([]);\n    }, 500);\n    return () => clearInterval(interval);\n  }, [typingEvt]); //client connection confirmation\n\n  client.onopen = () => {\n    console.log('WebSocket Client Connected.');\n  }; //got message from server\n\n\n  client.onmessage = message => {\n    const dataFromServer = JSON.parse(message.data);\n\n    switch (dataFromServer.type) {\n      case \"typing\":\n        setTypingEvt([dataFromServer]);\n        break;\n\n      case \"message\":\n        setMessageList([...messageList, dataFromServer]);\n        setMessage('');\n        break;\n\n      case \"delmessage\":\n        let msgLi = messageList.filter((_, ind) => ind !== dataFromServer.mid);\n        setMessageList(msgLi);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const typeMessage = e => {\n    let msg = e.target.value; //send event from client to server\n\n    client.send(JSON.stringify({\n      type: \"typing\",\n      uid: loginInfo.uid,\n      uname: loginInfo.uname\n    }));\n    setMessage(msg);\n  };\n\n  const onSendMessage = e => {\n    e.preventDefault(); //send messsage from client to server\n\n    if (editMsgId != null) {\n      client.send(JSON.stringify({\n        type: \"editMessage\",\n        mid: editMsgId,\n        mes: message,\n        uid: loginInfo.uid,\n        uname: loginInfo.uname\n      }));\n    } else {\n      client.send(JSON.stringify({\n        type: \"message\",\n        mes: message,\n        uid: loginInfo.uid,\n        uname: loginInfo.uname\n      }));\n    }\n  };\n\n  const removeMessage = index => {\n    let msgLi = messageList.filter((_, ind) => ind !== index);\n    setMessageList(msgLi);\n    client.send(JSON.stringify({\n      type: \"delmessage\",\n      mid: index\n    }));\n  };\n\n  const editMessage = index => {\n    let msgToBeEdited = messageList.filter((_, ind) => ind == index);\n    setMessage(msgToBeEdited[0].mes);\n    setEditMsgId(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msger-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msger-header-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-comment-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), \" SimpleChat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msger-header-options\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-cog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msger-chat\",\n        children: messageList.map((msg, i) => msg.uid == loginInfo.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg right-msg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-name\",\n                children: msg.uname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-time\",\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"hh:mm a\",\n                  children: new Date()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-text\",\n              children: msg.mes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(BsFillPencilFill, {\n                onClick: () => editMessage(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 25\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(BsFillArchiveFill, {\n                onClick: () => removeMessage(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(BsFillReplyFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg left-msg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-name\",\n                children: msg.uname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-time\",\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"hh:mm a\",\n                  children: new Date()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-text\",\n              children: msg.mes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), typingEvt.length && typingEvt[0].uid != loginInfo.uid ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [typingEvt[0].uname, \" is typing..\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 66\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"msger-inputarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"msger-input\",\n          placeholder: \"Type message...\",\n          value: message,\n          onChange: typeMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"msger-send-btn\",\n          onClick: onSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatBoxComponent, \"kg4nT8f4mATX3YkwfgGDad8aqx0=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatBoxComponent;\nexport default ChatBoxComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBoxComponent\");","map":{"version":3,"names":["useState","useEffect","Moment","useSelector","BsFillPencilFill","BsFillReplyFill","BsFillArchiveFill","w3cwebsocket","W3CWebSocket","client","ChatBoxComponent","loginInfo","state","typingEvt","setTypingEvt","message","setMessage","messageList","setMessageList","editMsgId","setEditMsgId","interval","setInterval","clearInterval","onopen","console","log","onmessage","dataFromServer","JSON","parse","data","type","msgLi","filter","_","ind","mid","typeMessage","e","msg","target","value","send","stringify","uid","uname","onSendMessage","preventDefault","mes","removeMessage","index","editMessage","msgToBeEdited","map","i","Date","length"],"sources":["C:/Users/opt.admin/Documents/ChatApp/frontend/src/components/ChatBoxComponent.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Moment from 'react-moment';\r\nimport {useSelector} from \"react-redux\";\r\nimport { BsFillPencilFill, BsFillReplyFill, BsFillArchiveFill } from \"react-icons/bs\";\r\n\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\r\nconst client = new W3CWebSocket('ws://localhost:5000');\r\n\r\nfunction ChatBoxComponent(){\r\n\r\n    const loginInfo = useSelector((state) => state.loginInfo);\r\n\r\n    /* --------------- CHAT VAR & FUNCTIONS ------------ */\r\n\r\n    const [typingEvt, setTypingEvt] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [editMsgId, setEditMsgId] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setTypingEvt([]);\r\n      }, 500);\r\n      return () => clearInterval(interval);\r\n    }, [typingEvt]);\r\n\r\n    //client connection confirmation\r\n    client.onopen = () => {\r\n        console.log('WebSocket Client Connected.');\r\n    };\r\n\r\n    //got message from server\r\n    client.onmessage = (message) => {\r\n        const dataFromServer = JSON.parse(message.data);        \r\n        switch(dataFromServer.type){\r\n          case \"typing\":            \r\n            setTypingEvt([dataFromServer]);\r\n            break;\r\n          case \"message\":\r\n            setMessageList([...messageList, dataFromServer]);\r\n            setMessage('');\r\n            break;\r\n          case \"delmessage\":\r\n            let msgLi = messageList.filter((_, ind) => ind !== dataFromServer.mid);\r\n            setMessageList(msgLi);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n    };\r\n    \r\n    const typeMessage = (e) => {\r\n        let msg = e.target.value;\r\n        //send event from client to server\r\n        client.send(JSON.stringify({\r\n          type: \"typing\",\r\n          uid: loginInfo.uid,\r\n          uname: loginInfo.uname\r\n        }));\r\n        setMessage(msg);\r\n    }\r\n\r\n    const onSendMessage = (e)=> {\r\n        e.preventDefault();\r\n       \r\n        //send messsage from client to server\r\n        if(editMsgId != null){\r\n          client.send(JSON.stringify({\r\n              type: \"editMessage\",\r\n              mid: editMsgId,\r\n              mes: message,\r\n              uid: loginInfo.uid,\r\n              uname: loginInfo.uname\r\n          }));\r\n        } else {\r\n          client.send(JSON.stringify({\r\n              type: \"message\",\r\n              mes: message,\r\n              uid: loginInfo.uid,\r\n              uname: loginInfo.uname\r\n          }));\r\n      }\r\n    }\r\n\r\n    const removeMessage = (index) => {      \r\n      let msgLi = messageList.filter((_, ind) => ind !== index);\r\n      setMessageList(msgLi);\r\n      client.send(JSON.stringify({\r\n          type: \"delmessage\",\r\n          mid: index\r\n      }));\r\n    }\r\n\r\n    const editMessage = (index) => {      \r\n      let msgToBeEdited = messageList.filter((_, ind) => ind == index);\r\n      setMessage(msgToBeEdited[0].mes);   \r\n      setEditMsgId(index);   \r\n    }\r\n    return (<>\r\n    <div className=\"msger\">\r\n        <div className=\"msger-header\">\r\n          <div className=\"msger-header-title\">\r\n            <i className=\"fas fa-comment-alt\"></i> SimpleChat\r\n          </div>\r\n          <div className=\"msger-header-options\">\r\n            <span><i className=\"fas fa-cog\"></i></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"msger-chat\">\r\n          {messageList.map((msg, i) => msg.uid == loginInfo.uid ? \r\n            \r\n            <div key={i} className=\"msg right-msg\">\r\n                <div className=\"msg-img\"></div>\r\n\r\n                <div className=\"msg-bubble\">\r\n                  <div className=\"msg-info\">\r\n                    <div className=\"msg-info-name\">{msg.uname}</div>\r\n                    <div className=\"msg-info-time\"><Moment format=\"hh:mm a\">{new Date()}</Moment></div>\r\n                  </div>\r\n\r\n                  <div className=\"msg-text\">\r\n                  {msg.mes}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span><BsFillPencilFill onClick={() => editMessage(i)}/> </span>\r\n                  <span><BsFillArchiveFill onClick={() => removeMessage(i)}/> </span>\r\n                  <span><BsFillReplyFill/> </span>\r\n                </div>\r\n              </div>   \r\n              : \r\n              <div key={i} className=\"msg left-msg\">                \r\n                <div className=\"msg-img\"></div>\r\n\r\n                <div className=\"msg-bubble\">\r\n                  <div className=\"msg-info\">\r\n                    <div className=\"msg-info-name\">{msg.uname}</div>\r\n                    <div className=\"msg-info-time\"><Moment format=\"hh:mm a\">{new Date()}</Moment></div>\r\n                  </div>\r\n\r\n                  <div className=\"msg-text\">\r\n                    {msg.mes}\r\n                  </div>\r\n                </div>\r\n              </div> \r\n                       \r\n          )}\r\n          </div>\r\n\r\n        {typingEvt.length && typingEvt[0].uid != loginInfo.uid ? <p>{typingEvt[0].uname} is typing..</p> : ''}\r\n        <form className=\"msger-inputarea\">\r\n          <input type=\"text\" className=\"msger-input\" placeholder=\"Type message...\" value={message} onChange={typeMessage}/>\r\n          <button type=\"submit\" className=\"msger-send-btn\" onClick={onSendMessage}>Send</button>\r\n        </form>\r\n      </div>\r\n    </>);\r\n}\r\n\r\nexport default ChatBoxComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}