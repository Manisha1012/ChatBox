{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\opt.admin\\\\Documents\\\\ChatApp\\\\frontend\\\\src\\\\components\\\\ChatBoxComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { useSelector } from \"react-redux\";\nimport { BsFillPencilFill, BsFillReplyFill, BsFillArchiveFill, BsPencil, BsFillXCircleFill } from \"react-icons/bs\";\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket('ws://localhost:5000');\n\nfunction ChatBoxComponent() {\n  _s();\n\n  const loginInfo = useSelector(state => state.loginInfo);\n  /* --------------- CHAT VAR & FUNCTIONS ------------ */\n\n  const [typingEvt, setTypingEvt] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n  const [editMsgId, setEditMsgId] = useState(null);\n  const [replyMsgId, setReplyMsgId] = useState(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTypingEvt([]);\n    }, 500);\n    return () => clearInterval(interval);\n  }, [typingEvt]); //client connection confirmation\n\n  client.onopen = () => {\n    console.log('WebSocket Client Connected.');\n  }; //got message from server\n\n\n  client.onmessage = message => {\n    const dataFromServer = JSON.parse(message.data);\n\n    switch (dataFromServer.type) {\n      case \"typing\":\n        setTypingEvt([dataFromServer]);\n        break;\n\n      case \"message\":\n        setMessageList([...messageList, dataFromServer]);\n        setMessage('');\n        break;\n\n      case \"updateMessage\":\n        messageList[dataFromServer.mid] = dataFromServer;\n        setMessageList(messageList);\n        setMessage('');\n        setEditMsgId(null);\n        break;\n\n      case \"replyMessage\":\n        setMessageList([...messageList, dataFromServer]);\n        setMessage('');\n        setReplyMsgId(null);\n        console.log(messageList);\n        break;\n\n      case \"delmessage\":\n        let msgLi = messageList.filter((_, ind) => ind !== dataFromServer.mid);\n        setMessageList(msgLi);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const typeMessage = e => {\n    let msg = e.target.value; //send event from client to server\n\n    client.send(JSON.stringify({\n      type: \"typing\",\n      uid: loginInfo.uid,\n      uname: loginInfo.uname\n    }));\n    setMessage(msg);\n  };\n\n  const onSendMessage = e => {\n    e.preventDefault(); //send messsage from client to server\n\n    if (editMsgId != null) {\n      setReplyMsgId(null);\n      client.send(JSON.stringify({\n        type: \"updateMessage\",\n        mid: editMsgId,\n        eventType: 1,\n        mes: message,\n        uid: loginInfo.uid,\n        uname: loginInfo.uname,\n        msgtime: new Date()\n      }));\n    } else if (replyMessage != null) {\n      setEditMsgId(null);\n      client.send(JSON.stringify({\n        type: \"replyMessage\",\n        mid: replyMessage,\n        eventType: 2,\n        mes: message,\n        uid: loginInfo.uid,\n        uname: loginInfo.uname,\n        msgtime: new Date()\n      }));\n    } else {\n      client.send(JSON.stringify({\n        type: \"message\",\n        mes: message,\n        uid: loginInfo.uid,\n        uname: loginInfo.uname,\n        msgtime: new Date()\n      }));\n    }\n  };\n\n  const removeMessage = index => {\n    let msgLi = messageList.filter((_, ind) => ind !== index);\n    setMessageList(msgLi);\n    client.send(JSON.stringify({\n      type: \"delmessage\",\n      mid: index\n    }));\n  };\n\n  const editMessage = index => {\n    let msgToBeEdited = messageList.filter((_, ind) => ind == index);\n    setMessage(msgToBeEdited[0].mes);\n    setEditMsgId(index);\n  };\n\n  const replyMessage = index => {\n    setReplyMsgId(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msger-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msger-header-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-comment-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), \" SimpleChat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msger-header-options\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-cog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msger-chat\",\n        children: messageList.map((msg, i) => msg.uid == loginInfo.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg right-msg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-name\",\n                children: msg.uname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-time\",\n                children: [/*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"hh:mm a\",\n                  children: msg.msgtime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 52\n                }, this), \" \", msg.mid != null && msg.eventType == 1 ? /*#__PURE__*/_jsxDEV(BsPencil, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 141\n                }, this) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-text\",\n              children: [msg.mid != null && msg.eventType == 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"q\", {\n                  children: [messageList[msg.mid].mes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 95\n                  }, this), \"Message from \", messageList[msg.mid].uname, \" at \", /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"d M Y hh:mm a\",\n                    children: messageList[msg.mid].msgtime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 145\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 65\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 219\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 60\n              }, this) : '', msg.mes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(BsFillPencilFill, {\n                onClick: () => editMessage(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 25\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(BsFillArchiveFill, {\n                onClick: () => removeMessage(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 25\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(BsFillReplyFill, {\n                onClick: () => replyMessage(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 25\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg left-msg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-name\",\n                children: msg.uname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"msg-info-time\",\n                children: [/*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"hh:mm a\",\n                  children: msg.msgtime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 52\n                }, this), \" \", msg.mid != null && msg.eventType == 1 ? /*#__PURE__*/_jsxDEV(BsPencil, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 141\n                }, this) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-text\",\n              children: [msg.mid != null && msg.eventType == 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"q\", {\n                  children: [messageList[msg.mid].mes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 97\n                  }, this), \"Message from \", messageList[msg.mid].uname, \" at \", /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"d M Y hh:mm a\",\n                    children: messageList[msg.mid].msgtime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 147\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 221\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 62\n              }, this) : '', msg.mes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), typingEvt.length && typingEvt[0].uid != loginInfo.uid ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [typingEvt[0].uname, \" is typing..\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 66\n      }, this) : '', replyMsgId != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"q\", {\n          children: [messageList[replyMsgId].mes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 69\n          }, this), \"Message from \", messageList[replyMsgId].uname, \" at \", /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"d M Y hh:mm a\",\n            children: messageList[replyMsgId].msgtime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 122\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(BsFillXCircleFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 199\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 31\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"msger-inputarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"msger-input\",\n          placeholder: \"Type message...\",\n          value: message,\n          onChange: typeMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"msger-send-btn\",\n          onClick: onSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatBoxComponent, \"X/leEWUIjv/MFWEHYWnPyUVnVUQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatBoxComponent;\nexport default ChatBoxComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBoxComponent\");","map":{"version":3,"names":["useState","useEffect","Moment","useSelector","BsFillPencilFill","BsFillReplyFill","BsFillArchiveFill","BsPencil","BsFillXCircleFill","w3cwebsocket","W3CWebSocket","client","ChatBoxComponent","loginInfo","state","typingEvt","setTypingEvt","message","setMessage","messageList","setMessageList","editMsgId","setEditMsgId","replyMsgId","setReplyMsgId","interval","setInterval","clearInterval","onopen","console","log","onmessage","dataFromServer","JSON","parse","data","type","mid","msgLi","filter","_","ind","typeMessage","e","msg","target","value","send","stringify","uid","uname","onSendMessage","preventDefault","eventType","mes","msgtime","Date","replyMessage","removeMessage","index","editMessage","msgToBeEdited","map","i","length"],"sources":["C:/Users/opt.admin/Documents/ChatApp/frontend/src/components/ChatBoxComponent.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Moment from 'react-moment';\r\nimport {useSelector} from \"react-redux\";\r\nimport { BsFillPencilFill, BsFillReplyFill, BsFillArchiveFill, BsPencil, BsFillXCircleFill } from \"react-icons/bs\";\r\n\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\r\nconst client = new W3CWebSocket('ws://localhost:5000');\r\n\r\nfunction ChatBoxComponent(){\r\n\r\n    const loginInfo = useSelector((state) => state.loginInfo);\r\n\r\n    /* --------------- CHAT VAR & FUNCTIONS ------------ */\r\n\r\n    const [typingEvt, setTypingEvt] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [editMsgId, setEditMsgId] = useState(null);\r\n    const [replyMsgId, setReplyMsgId] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setTypingEvt([]);\r\n      }, 500);\r\n      return () => clearInterval(interval);\r\n    }, [typingEvt]);\r\n\r\n    //client connection confirmation\r\n    client.onopen = () => {\r\n        console.log('WebSocket Client Connected.');\r\n    };\r\n\r\n    //got message from server\r\n    client.onmessage = (message) => {\r\n        const dataFromServer = JSON.parse(message.data);        \r\n        switch(dataFromServer.type){\r\n          case \"typing\":            \r\n            setTypingEvt([dataFromServer]);\r\n            break;\r\n          case \"message\":\r\n            setMessageList([...messageList, dataFromServer]);\r\n            setMessage('');\r\n            break;\r\n          case \"updateMessage\":\r\n            messageList[dataFromServer.mid] = dataFromServer;\r\n            setMessageList(messageList);\r\n            setMessage('');\r\n            setEditMsgId(null);\r\n            break;\r\n          case \"replyMessage\":\r\n            setMessageList([...messageList, dataFromServer]);\r\n            setMessage('');\r\n            setReplyMsgId(null);\r\n            console.log(messageList);\r\n            break;\r\n          case \"delmessage\":\r\n            let msgLi = messageList.filter((_, ind) => ind !== dataFromServer.mid);\r\n            setMessageList(msgLi);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n    };\r\n    \r\n    const typeMessage = (e) => {\r\n        let msg = e.target.value;\r\n        //send event from client to server\r\n        client.send(JSON.stringify({\r\n          type: \"typing\",\r\n          uid: loginInfo.uid,\r\n          uname: loginInfo.uname\r\n        }));\r\n        setMessage(msg);\r\n    }\r\n\r\n    const onSendMessage = (e)=> {\r\n        e.preventDefault();\r\n       \r\n        //send messsage from client to server\r\n        if(editMsgId != null){\r\n          setReplyMsgId(null);\r\n          client.send(JSON.stringify({\r\n              type: \"updateMessage\",\r\n              mid: editMsgId,\r\n              eventType: 1,\r\n              mes: message,\r\n              uid: loginInfo.uid,\r\n              uname: loginInfo.uname,\r\n              msgtime: new Date()\r\n          }));\r\n        } else if(replyMessage != null) {\r\n          setEditMsgId(null);\r\n          client.send(JSON.stringify({\r\n              type: \"replyMessage\",\r\n              mid: replyMessage,\r\n              eventType: 2,\r\n              mes: message,\r\n              uid: loginInfo.uid,\r\n              uname: loginInfo.uname,\r\n              msgtime: new Date()\r\n          }));\r\n      } else {\r\n        client.send(JSON.stringify({\r\n            type: \"message\",\r\n            mes: message,\r\n            uid: loginInfo.uid,\r\n            uname: loginInfo.uname,\r\n            msgtime: new Date()\r\n        }));\r\n      }\r\n    }\r\n\r\n    const removeMessage = (index) => {      \r\n      let msgLi = messageList.filter((_, ind) => ind !== index);\r\n      setMessageList(msgLi);\r\n      client.send(JSON.stringify({\r\n          type: \"delmessage\",\r\n          mid: index\r\n      }));\r\n    }\r\n\r\n    const editMessage = (index) => {      \r\n      let msgToBeEdited = messageList.filter((_, ind) => ind == index);\r\n      setMessage(msgToBeEdited[0].mes);   \r\n      setEditMsgId(index);   \r\n    }\r\n\r\n    const replyMessage = (index) => {      \r\n      setReplyMsgId(index);  \r\n    }\r\n\r\n    return (<>\r\n    <div className=\"msger\">\r\n        <div className=\"msger-header\">\r\n          <div className=\"msger-header-title\">\r\n            <i className=\"fas fa-comment-alt\"></i> SimpleChat\r\n          </div>\r\n          <div className=\"msger-header-options\">\r\n            <span><i className=\"fas fa-cog\"></i></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"msger-chat\">\r\n          {messageList.map((msg, i) => msg.uid == loginInfo.uid ? \r\n            \r\n            <div key={i} className=\"msg right-msg\">\r\n                <div className=\"msg-img\"></div>\r\n\r\n                <div className=\"msg-bubble\">\r\n                  <div className=\"msg-info\">\r\n                    <div className=\"msg-info-name\">{msg.uname}</div>\r\n                    <div className=\"msg-info-time\"><Moment format=\"hh:mm a\">{msg.msgtime}</Moment> {msg.mid != null && msg.eventType == 1 ? <BsPencil/> : ''}</div>\r\n                  </div>\r\n\r\n                  <div className=\"msg-text\">\r\n                  {msg.mid != null && msg.eventType == 2 ? <div><q>{messageList[msg.mid].mes} <br/>Message from {messageList[msg.mid].uname} at <Moment format=\"d M Y hh:mm a\">{messageList[msg.mid].msgtime}</Moment></q><hr/></div> : ''}\r\n                  {msg.mes}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span><BsFillPencilFill onClick={() => editMessage(i)}/> </span>\r\n                  <span><BsFillArchiveFill onClick={() => removeMessage(i)}/> </span>\r\n                  <span><BsFillReplyFill onClick={() => replyMessage(i) }/> </span>\r\n                </div>\r\n              </div>   \r\n              : \r\n              <div key={i} className=\"msg left-msg\">                \r\n                <div className=\"msg-img\"></div>\r\n\r\n                <div className=\"msg-bubble\">\r\n                  <div className=\"msg-info\">\r\n                    <div className=\"msg-info-name\">{msg.uname}</div>\r\n                    <div className=\"msg-info-time\"><Moment format=\"hh:mm a\">{msg.msgtime}</Moment> {msg.mid != null && msg.eventType == 1 ? <BsPencil/> : ''}</div>\r\n                  </div>\r\n\r\n                  <div className=\"msg-text\">\r\n                    {msg.mid != null && msg.eventType == 2 ? <div><q>{messageList[msg.mid].mes} <br/>Message from {messageList[msg.mid].uname} at <Moment format=\"d M Y hh:mm a\">{messageList[msg.mid].msgtime}</Moment></q><hr/></div> : ''}\r\n                    {msg.mes}\r\n                  </div>\r\n                </div>\r\n              </div> \r\n                       \r\n          )}\r\n          </div>\r\n\r\n        {typingEvt.length && typingEvt[0].uid != loginInfo.uid ? <p>{typingEvt[0].uname} is typing..</p> : ''}\r\n        {replyMsgId != null ? <div><q>{messageList[replyMsgId].mes} <br/>Message from {messageList[replyMsgId].uname} at <Moment format=\"d M Y hh:mm a\">{messageList[replyMsgId].msgtime}</Moment></q><BsFillXCircleFill/></div>: ''}\r\n        <form className=\"msger-inputarea\">\r\n          <input type=\"text\" className=\"msger-input\" placeholder=\"Type message...\" value={message} onChange={typeMessage}/>\r\n          <button type=\"submit\" className=\"msger-send-btn\" onClick={onSendMessage}>Send</button>\r\n        </form>\r\n      </div>\r\n    </>);\r\n}\r\n\r\nexport default ChatBoxComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}